{"ast":null,"code":"var _jsxFileName = \"D:\\\\Resume_Formatter_Project\\\\demo_project\\\\resumeai\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Create a react component that inputs a textarea message then performs a fetch request to localhost:3001 and get back a response as a data.message and displays the message in a box below\n// start with npm start - frontend\n// then node index.js - backend\n\n// should be a resume and job description\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport SuggestionCard from './components/SuggestionCard.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = React.useState(''); // message to send to server\n  const [fileName, setFileName] = React.useState('Upload Resume'); // name of the file to upload [should be a resume\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false); // check whether user has submitted the input or not\n  const [isLoading, setIsLoading] = React.useState(false); // check whether the model has sent back a response or not\n\n  const [responses_items, setResponses] = React.useState(''); // response from server\n\n  const test_responses = [\"test1_message\", \"test2_message\", \"test3_message\"];\n  const test_responses_items = test_responses.map(response_single => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"suggestion_card_container\",\n    children: /*#__PURE__*/_jsxDEV(SuggestionCard, {\n      text: response_single\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this));\n  const handleFileUpload = event => {\n    const SelectedFile = event.target.files[0];\n    if (SelectedFile) {\n      const reader = new FileReader();\n      reader.readAsText(SelectedFile);\n      reader.onload = event => {\n        setMessage(event.target.result);\n      };\n    } else {\n      setFileName(\"Upload Resume\");\n    }\n  };\n  const handleChange = event => {\n    setMessage(event.target.value);\n  }; // update the message to send to the server\n\n  // after the user receives a response, they can chop it to a list of strings if they are separated by a dot character\n  // then display each string in a list=\n  const handleSubmit = event => {\n    setIsSubmitting(true);\n    setIsLoading(true);\n    event.preventDefault();\n    fetch('http://localhost:3001', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: message\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"data message is: \", data.message);\n      console.log(data.message.split(\"\\n\"));\n      const responses = data.message.split(\"\\n\");\n      console.log(\"responses is: \", responses);\n      const non_empty_responses = responses.filter(response_single => response_single !== \"\");\n      const test_responses = [\"test1_message\", \"test2_message\", \"test3_message\"];\n      const responses_items = non_empty_responses.map(response_single => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(SuggestionCard, {\n          text: response_single\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this));\n      setResponses(responses_items);\n      setIsLoading(false);\n    }); // send the message to the server\n  };\n\n  // for the response, chop it down to a list of strings if they are separated by a dot character\n  // then display each string in a list\n  // for the message, display it in a textarea box\n\n  // the textarea box and response text should be in the middle of the left screen and the right screen\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Resume Advisor v1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"User_Submit\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Resume Advicer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Put Your Resume Text Below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"resume_text_area\",\n              placeholder: \"Put our resume text, should start with your name\",\n              value: message,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"resume-file\",\n            className: \"custom-file-upload\",\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit_text_button\",\n            id: \"resume-file\",\n            name: \"resume\",\n            type: \"file\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"submit_button\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Model_Response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here are the top advices!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), isSubmitting ? isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"responses_items_contianer\",\n        children: responses_items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No input yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"ndhuHbY1aj4xXOziXS3sREMOxQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","SuggestionCard","jsxDEV","_jsxDEV","App","_s","message","setMessage","useState","fileName","setFileName","isSubmitting","setIsSubmitting","isLoading","setIsLoading","responses_items","setResponses","test_responses","test_responses_items","map","response_single","className","children","text","_jsxFileName","lineNumber","columnNumber","handleFileUpload","event","SelectedFile","target","files","reader","FileReader","readAsText","onload","result","handleChange","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","split","responses","non_empty_responses","filter","onSubmit","placeholder","onChange","htmlFor","id","name","type","_c","$RefreshReg$"],"sources":["D:/Resume_Formatter_Project/demo_project/resumeai/src/App.js"],"sourcesContent":["// Create a react component that inputs a textarea message then performs a fetch request to localhost:3001 and get back a response as a data.message and displays the message in a box below\n// start with npm start - frontend\n// then node index.js - backend\n\n// should be a resume and job description\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport SuggestionCard from './components/SuggestionCard.jsx';\n\nfunction App(){\n  const [message, setMessage] = React.useState(''); // message to send to server\n  const [fileName, setFileName] = React.useState('Upload Resume'); // name of the file to upload [should be a resume\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false); // check whether user has submitted the input or not\n  const [isLoading, setIsLoading] = React.useState(false); // check whether the model has sent back a response or not\n\n  const [responses_items, setResponses] = React.useState(''); // response from server\n\n  const test_responses = [\"test1_message\", \"test2_message\", \"test3_message\"];\n  const test_responses_items = test_responses.map((response_single) =>\n        <li className='suggestion_card_container'>\n          <SuggestionCard text={response_single} />\n        </li>\n  );\n\n  const handleFileUpload = (event) => {\n    const SelectedFile = event.target.files[0];\n    if(SelectedFile){\n      const reader = new FileReader();\n      reader.readAsText(SelectedFile);\n      reader.onload = (event) => {\n        setMessage(event.target.result);\n      }\n    } else {\n      setFileName(\"Upload Resume\");\n    }\n  }\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  } // update the message to send to the server\n\n  // after the user receives a response, they can chop it to a list of strings if they are separated by a dot character\n  // then display each string in a list=\n  const handleSubmit = (event) => {\n    setIsSubmitting(true);\n    setIsLoading(true);\n    event.preventDefault();\n    fetch('http://localhost:3001', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({message: message}),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"data message is: \", data.message);\n      console.log(data.message.split(\"\\n\"));\n\n      const responses = data.message.split(\"\\n\");\n      console.log(\"responses is: \", responses);\n      const non_empty_responses = responses.filter((response_single) => response_single !== \"\");\n      const test_responses = [\"test1_message\", \"test2_message\", \"test3_message\"];\n      const responses_items = non_empty_responses.map((response_single) =>\n        <li>\n          <SuggestionCard text={response_single} />\n        </li>\n      );\n\n      setResponses(responses_items);\n      setIsLoading(false);\n    }); // send the message to the server\n  }\n  \n  \n  \n\n  // for the response, chop it down to a list of strings if they are separated by a dot character\n  // then display each string in a list\n  // for the message, display it in a textarea box\n\n\n\n  // the textarea box and response text should be in the middle of the left screen and the right screen\n  return (\n  <div className=\"App\">\n  <div className=\"App_Header\">\n    <h1>Resume Advisor v1.0</h1>\n  </div>\n  <div className=\"User_Submit\">\n    <form onSubmit={handleSubmit}>\n      <h1>Resume Advicer</h1>\n      <p>Put Your Resume Text Below</p>\n      <div>\n        <label>\n          <textarea className='resume_text_area' placeholder='Put our resume text, should start with your name' value={message} onChange={handleChange} />\n        </label>\n      </div>\n\n      <div>\n        <label htmlFor=\"resume-file\" className=\"custom-file-upload\">{fileName}</label>\n        <input className='submit_text_button' id=\"resume-file\" name='resume' type=\"file\" onChange={handleFileUpload}/>\n      </div>\n      \n      <input className='submit_button' type=\"submit\" value=\"Submit\" />\n    </form>\n  </div>\n  \n  <div className=\"Model_Response\">\n    <h1>Here are the top advices!</h1>\n    {\n      isSubmitting ? (\n        isLoading ? (<p>Loading...</p> ) : \n          (\n            <ul className='responses_items_contianer'>{responses_items}</ul>\n          )\n        ) : (<p>No input yet</p>)\n    }\n    \n  </div>\n\n  \n  </div>\n);\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}