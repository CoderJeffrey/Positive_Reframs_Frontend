{"ast":null,"code":"var _jsxFileName = \"D:\\\\Research\\\\Positive_Reframing\\\\Front_End\\\\Positive_Reframs_Frontend\\\\demo_project\\\\positiveGPT\\\\src\\\\components\\\\StrategySelection.jsx\";\nimport React from \"react\";\nimport './StrategySelection.css';\n\n// set current stargy and passed back to App.jsx\n// at least has 5 strategie in a row\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StrategySelection = props => {\n  const strategyList = [\"Growth Mindset\", \"Impermanence\", \"Neutralizing\", \"Optimism\", \"Self-Affirmation\", \"Thankfulness\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strategies\",\n    onChange: e => {\n      console.log(\"1\", e.target.value);\n      props.setCurrentStrategy(e.target.value);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"selection-list\",\n      on: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        id: \"first-selection\",\n        value: \"Growth Mindset\",\n        children: \"Growth Mindset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Impermanence\",\n        children: \"Impermanence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Neutralizing\",\n        children: \"Neutralizing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Optimism\",\n        children: \"Optimism\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Self-Affirmation\",\n        children: \"Self-Affirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Thankfulness\",\n        children: \"Thankfulness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = StrategySelection;\nexport default StrategySelection;\nvar _c;\n$RefreshReg$(_c, \"StrategySelection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StrategySelection","props","strategyList","className","onChange","e","console","log","target","value","setCurrentStrategy","children","id","on","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Research/Positive_Reframing/Front_End/Positive_Reframs_Frontend/demo_project/positiveGPT/src/components/StrategySelection.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './StrategySelection.css';\r\n\r\n// set current stargy and passed back to App.jsx\r\n// at least has 5 strategie in a row\r\nconst StrategySelection = (props) => {\r\n\r\n    const strategyList = [\"Growth Mindset\", \"Impermanence\", \"Neutralizing\", \"Optimism\", \"Self-Affirmation\", \"Thankfulness\"];\r\n\r\n    return (\r\n        <div className=\"strategies\" onChange={(e)=>{\r\n                console.log(\"1\",e.target.value)\r\n                props.setCurrentStrategy(e.target.value)}}>\r\n            {\r\n                <select id=\"selection-list\" on>\r\n                    <option id=\"first-selection\" value=\"Growth Mindset\">Growth Mindset</option>\r\n                    <option value=\"Impermanence\">Impermanence</option>\r\n                    <option value=\"Neutralizing\">Neutralizing</option>\r\n                    <option value=\"Optimism\">Optimism</option>\r\n                    <option value=\"Self-Affirmation\">Self-Affirmation</option>\r\n                    <option value=\"Thankfulness\">Thankfulness</option>\r\n                </select>\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StrategySelection;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;;AAEhC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EAEjC,MAAMC,YAAY,GAAG,CAAC,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,UAAU,EAAE,kBAAkB,EAAE,cAAc,CAAC;EAEvH,oBACIH,OAAA;IAAKI,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAGC,CAAC,IAAG;MACnCC,OAAO,CAACC,GAAG,CAAC,GAAG,EAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;MAC/BR,KAAK,CAACS,kBAAkB,CAACL,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAAA,CAAE;IAAAE,QAAA,eAE1CZ,OAAA;MAAQa,EAAE,EAAC,gBAAgB;MAACC,EAAE;MAAAF,QAAA,gBAC1BZ,OAAA;QAAQa,EAAE,EAAC,iBAAiB;QAACH,KAAK,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC3ElB,OAAA;QAAQU,KAAK,EAAC,cAAc;QAAAE,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAClDlB,OAAA;QAAQU,KAAK,EAAC,cAAc;QAAAE,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAClDlB,OAAA;QAAQU,KAAK,EAAC,UAAU;QAAAE,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC1ClB,OAAA;QAAQU,KAAK,EAAC,kBAAkB;QAAAE,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC1DlB,OAAA;QAAQU,KAAK,EAAC,cAAc;QAAAE,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGX;AAEd,CAAC;AAAAC,EAAA,GArBKlB,iBAAiB;AAuBvB,eAAeA,iBAAiB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}