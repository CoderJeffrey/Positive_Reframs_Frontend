{"ast":null,"code":"var _jsxFileName = \"D:\\\\Research\\\\Positive_Reframing\\\\Front_End\\\\Positive_Reframs_Frontend\\\\demo_project\\\\positiveGPT\\\\src\\\\components\\\\StrategySelection.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './StrategySelection.css';\n\n// set current stargy and passed back to App.jsx\n// at least has 5 strategie in a row\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StrategySelection = props => {\n  _s();\n  const strategyList = [\" Growth Mindset\", \"Impermanence\", \"Neutralizing\", \"Optimism\", \"Self-Affirmation\", \"Thankfulness\"];\n  const [currentStrategy, setCurrentStrategy] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strategies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(StrategySelection, \"xSSYj28IjuzcCLdSFzVERknSBUI=\");\n_c = StrategySelection;\nexport default StrategySelection;\nvar _c;\n$RefreshReg$(_c, \"StrategySelection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StrategySelection","props","_s","strategyList","currentStrategy","setCurrentStrategy","useState","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Research/Positive_Reframing/Front_End/Positive_Reframs_Frontend/demo_project/positiveGPT/src/components/StrategySelection.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './StrategySelection.css';\r\n\r\n// set current stargy and passed back to App.jsx\r\n// at least has 5 strategie in a row\r\nconst StrategySelection = (props) => {\r\n\r\n    const strategyList = [\" Growth Mindset\", \"Impermanence\", \"Neutralizing\", \"Optimism\", \"Self-Affirmation\", \"Thankfulness\"];\r\n    const [currentStrategy, setCurrentStrategy] = React.useState(\"\");\r\n\r\n    return (\r\n        <div className=\"strategies\">\r\n            {\r\n                \r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StrategySelection;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;;AAEhC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEjC,MAAMC,YAAY,GAAG,CAAC,iBAAiB,EAAE,cAAc,EAAE,cAAc,EAAE,UAAU,EAAE,kBAAkB,EAAE,cAAc,CAAC;EACxH,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EAEhE,oBACIP,OAAA;IAAKQ,SAAS,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKrB;AAEd,CAAC;AAAAT,EAAA,CAbKF,iBAAiB;AAAAY,EAAA,GAAjBZ,iBAAiB;AAevB,eAAeA,iBAAiB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}